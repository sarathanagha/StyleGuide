/**
 * Tooltip & Label Styles
 *
 * Example Usage:
 * <div data-tooltip="tooltip text">Tooltip container</div>
 *      for a default tooltip on bottom of the container element
 * <div class="left" data-tooltip="tooltip text">Tooltip container</div>
 *      for a tooltip positioned left of the container element
 * <div class="medium top" data-tooltip="tooltip text">Tooltip container</div>
 *      for a tooltip on top of the container element with medium width and more padding than default
 *
 */

@import "../../../../Core/DataStudioUX/src/Stylesheets/_colors";

// Constants
$directions: (empty, top, left, right, bottom);
$sizes: (small: 80px, medium: 160px, large: 260px);
$tooltip-name: data-tooltip;
$tooltip-selector: "[" + #{$tooltip-name} + "]";

// Convenience (also because scss doesn't have a set)
$empty: nth($directions, 1);
$top: nth($directions, 2);
$left: nth($directions, 3);
$right: nth($directions, 4);
$bottom: nth($directions, 5);

// Takes top, bottom, left, right
@mixin direction($direction: "empty") {
    @if index($directions, $direction) == false {
        @error "Unknown direction `#{$direction}` in `#{$directions}.";
    }

    $opposite: "";
    @if $direction == left {
        $opposite: right;
    } @else if $direction == top {
        $opposite: bottom;
    } @else if $direction == right {
        $opposite: left;
    } @else {
        $opposite: top;
    }
    $direction-class: "";
    @if $direction != empty {
        $direction-class: "." + $direction;
    }

    $arrow-container-separation: 12px;
    $arrow-height: 12px;

    // Tooltip content area positioning
    &#{$direction-class}:before, &#{$direction-class}:after {
        left: auto; right: auto; top: auto; bottom: auto;
        @if $direction == $empty or $direction == $top or $direction == $bottom {
            left: 50%;
            transform: translateX(-50%);
        } @else {
            bottom: 50%;
            transform: none;
        }

        #{$opposite}: 100%;
    }

    // Tooltip arrow positioning
    &#{$direction-class}:before {
        margin: 0;
        margin-#{$opposite}: -$arrow-height;
        @if $direction == $left or $direction == $right {
            margin-#{$bottom}: -$arrow-height/2;
        }

        border-color: transparent;
        @if $direction == empty {
            border-#{$bottom}-color: $charcoal;
        } @else {
            border-#{$direction}-color: $charcoal;
        }
    }

    &#{$direction-class}:hover:before, &#{$direction-class}:hover:after {
        @if $direction == $left {
            transform: translateX(-$arrow-container-separation) translateX(0%);
        } @else if $direction == $right {
            transform: translateX($arrow-container-separation) translateX(0%);
        } @else if $direction == $top {
            transform: translateY(-$arrow-container-separation) translateX(-50%);
        } @else {
            transform: translateY($arrow-container-separation) translateX(-50%);
        }
    }

    &#{$direction-class}:after {
        @if $direction == $left or $direction == $right {
            margin-#{$bottom}: -$arrow-height;
        }
    }
}

#{$tooltip-selector} {
    $zindex: 100000;
    $arrow-height: 12px; // also width

    position: relative;
    display: inline-block;

    /* Tooltip arrow and content areas */
    &:after, &:before {
        position: absolute;
        visibility: hidden;
        opacity: 0;
        z-index: $zindex;
        pointer-events: none;
        transition: 200ms ease;
        transition-delay: 0ms;
        transform: translate3d(0,0,0);
    }

    &:hover:after, &:hover:before {
        visibility: visible;
        opacity: 1;
    }

    /* Tooltip arrow area */
    &:before {
        content: '';
        position: absolute;
        background: 0 0;
        border: $arrow-height/2 solid transparent;
        z-index: $zindex + 1;
    }

    /* Tooltip content area */
    &:after {
        content: attr(#{$tooltip-name});
        background-color: $charcoal;
        color: white;
        padding: 4px 8px 6px 8px;
        font-size: 12px;
        line-height: 18px;
        white-space: nowrap;
    }

    /* Direction-based positioning */
    @each $direction in $directions {
        @include direction($direction);
    }

    /* Fixed width tooltips */
    @each $size in map-keys($sizes) {
        &#{"."}#{$size}:after {
            width: map-get($sizes, $size);
            white-space: pre-line;
            text-overflow: ellipsis;
            overflow: hidden;
            padding: 10px 16px 12px 16px;
        }
    }
}

// Don't show empty tooltips
[#{$tooltip-name}=''] {
    &:after, &:before {
        display: none !important;
    }
}
